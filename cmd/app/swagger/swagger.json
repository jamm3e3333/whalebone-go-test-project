{
    "swagger": "2.0",
    "info": {
        "description": "API provides endpoints for whalebone clients",
        "title": "Whalebone Clients API",
        "contact": {
            "name": "Whalebone"
        },
        "version": "2.0"
    },
    "paths": {
        "/health/liveness": {
            "get": {
                "description": "Health check for liveness probe",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/health.Result"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/health.Result"
                        }
                    }
                }
            }
        },
        "/health/readiness": {
            "get": {
                "description": "Health check of the application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/health.Result"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/health.Result"
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "description": "Expose Prometheus metrics",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Metrics"
                ],
                "responses": {
                    "200": {
                        "description": "Prometheus metrics",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/client": {
            "post": {
                "description": "Creates a new client account with the provided details such as email, date of birth, name, and id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Create a new client",
                "parameters": [
                    {
                        "type": "string",
                        "example": "application/json",
                        "description": "Content-Type",
                        "name": "Content-Type",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Client data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/client.CreateClientReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"bad request\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "{\"error\": \"unprocessable entity\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"internal server error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/client/{id}": {
            "get": {
                "description": "Retrieves a client's information based on the provided client ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Get client details by ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "application/json",
                        "description": "Content-Type",
                        "name": "Content-Type",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174000\"",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client details",
                        "schema": {
                            "$ref": "#/definitions/client.GetClientResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"bad request\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"internal server error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "client.CreateClientReq": {
            "type": "object",
            "required": [
                "date_of_birth",
                "email",
                "id",
                "name"
            ],
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "client.GetClientResponse": {
            "type": "object",
            "required": [
                "date_of_birth",
                "email",
                "id",
                "name"
            ],
            "properties": {
                "date_of_birth": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@john.doe.doe"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                }
            }
        },
        "health.ComponentStatus": {
            "type": "object",
            "properties": {
                "component": {
                    "type": "string",
                    "example": "main"
                },
                "status": {
                    "enum": [
                        "up",
                        "down"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/health.Status"
                        }
                    ],
                    "example": "up"
                }
            }
        },
        "health.Result": {
            "type": "object",
            "properties": {
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/health.ComponentStatus"
                    }
                },
                "status": {
                    "enum": [
                        "up",
                        "down"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/health.Status"
                        }
                    ],
                    "example": "up"
                }
            }
        },
        "health.Status": {
            "type": "string",
            "enum": [
                "up",
                "down",
                "timeout"
            ],
            "x-enum-varnames": [
                "StatusUp",
                "StatusDown",
                "StatusTimeout"
            ]
        }
    }
}